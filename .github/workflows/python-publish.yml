name: Python Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest # macOS 环境

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10' # 根据你的需求修改Python版本

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pyinstaller pillow # 安装PyInstaller和Pillow
        # 如果有额外依赖，确保从requirements.txt安装
        # python -m pip install -r requirements.txt

    - name: Copy icon for macOS
      run: |
        # 确保源路径和目标路径正确
        # 这里的路径是GitHub Actions runner上的工作目录结构
        cp qy.icns ./ # 复制图标到当前项目目录

    - name: Create PyInstaller spec file for macOS
      run: |
        # Use a multi-line string directly with redirection
        cat << EOF > Auto24hStream3.3.spec
a = Analysis(
    ['Auto24hStream3.3.py'],
    pathex=['.'], # Use relative path '.' for current working directory
    binaries=[],
    datas=[('qy.icns', '.')], # Add icon file to packaged data
    hiddenimports=[],
    hookspath=[],
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=None, # Set to None if encryption is not needed
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data,
             cipher=None) # Set to None if encryption is not needed

exe = EXE(pyz,
          a.scripts,
          a.binaries,
          a.zipfiles,
          a.datas,
          [],
          name='Auto24hStream3.3',
          debug=False,
          bootloader_ignore_signals=False,
          strip=False,
          upx=True, # Try enabling UPX compression
          upx_exclude=[],
          runtime_tmpdir=None,
          console=False, # Set to False for GUI applications
          disable_windowed_traceback=False,
          argv_emulation=False,
          target_arch=None,
          codesign_identity=None,
          entitlements_file=None )

app = BUNDLE(exe,
           name='Auto24hStream3.3.app', # Full application name
           icon='qy.icns', # Use qy.icns as the icon
           bundle_identifier='com.yourcompany.auto24hstream', # Recommended to set a unique bundle identifier
           info_plist={ # Add Info.plist information
               'CFBundleDisplayName': 'AutoVideoStreamerGUI',
               'CFBundleShortVersionString': '3.3', # Application version
               'CFBundleVersion': '${{ github.run_number }}', # Can use GitHub Actions run number as build version
               'NSHumanReadableCopyright': '© 2023 Your Name', # Copyright information
               'LSUIElement': True # Set to True for background applications if applicable
           })
EOF
        # Note: The spec file content above is adjusted based on PyInstaller's BUNDLE mode.
        # Ensure compatibility with your actual needs and PyInstaller version.
        # Refer to the official PyInstaller documentation for generating spec files.


    - name: Build for macOS
      run: |
        pyinstaller --clean Auto24hStream3.3.spec # Create MacOS executable, add --clean to clean old files

    - name: Archive app
      run: |
        # Compress the .app file for uploading
        cd dist
        zip -r Auto24hStream3.3.app.zip Auto24hStream3.3.app

    - name: Upload release assets
      # Only upload when creating a new release tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/Auto24hStream3.3.app.zip # Upload Mac executable file
        # name: Release ${{ github.ref_name }} # You can customize the Release name
        # body: | # You can customize the Release description
        #   Automated build of version ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

