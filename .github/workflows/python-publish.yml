name: Python Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest # macOS 环境

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10' # 根据你的需求修改Python版本

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pyinstaller pillow # 安装PyInstaller和Pillow
        # 如果有额外依赖，确保从requirements.txt安装
        # python -m pip install -r requirements.txt

    - name: Copy icon for macOS
      run: |
        # 确保源路径和目标路径正确
        # 这里的路径是GitHub Actions runner上的工作目录结构
        cp qy.icns ./ # 复制图标到当前项目目录

    - name: Create PyInstaller spec file for macOS
      run: |
        # 使用 | 符号来处理多行字符串，避免YAML语法冲突
        echo "
a = Analysis(
    ['Auto24hStream3.3.py'],
    pathex=['.'], # 使用相对路径 '.' 表示当前工作目录
    binaries=[],
    datas=[('qy.icns', '.')], # 添加图标文件到打包数据
    hiddenimports=[],
    hookspath=[],
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=None, # 如果不需要加密，可以设置为 None
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data,
             cipher=None) # 如果不需要加密，可以设置为 None

exe = EXE(pyz,
          a.scripts,
          a.binaries,
          a.zipfiles,
          a.datas,
          [],
          name='Auto24hStream3.3',
          debug=False,
          bootloader_ignore_signals=False,
          strip=False,
          upx=True, # 可以尝试启用UPX压缩
          upx_exclude=[],
          runtime_tmpdir=None,
          console=False, # GUI应用设置为 False
          disable_windowed_traceback=False,
          argv_emulation=False,
          target_arch=None,
          codesign_identity=None,
          entitlements_file=None )

app = BUNDLE(exe,
           name='Auto24hStream3.3.app', # 完整的应用名称
           icon='qy.icns', # 使用qy.icns作为icon
           bundle_identifier='com.yourcompany.auto24hstream', # 建议设置一个唯一的bundle identifier
           info_plist={ # 添加Info.plist信息
               'CFBundleDisplayName': 'AutoVideoStreamerGUI',
               'CFBundleShortVersionString': '3.3', # 应用版本
               'CFBundleVersion': '${{ github.run_number }}', # 可以使用GitHub Actions运行号作为构建版本
               'NSHumanReadableCopyright': '© 2023 Your Name', # 版权信息
               'LSUIElement': True # 如果是后台应用可以设置为 True
           })
" > Auto24hStream3.3.spec # 使用 echo 写入文件
        # 注意：上面的spec文件内容是基于PyInstaller的BUNDLE模式进行了一些补充和调整，
        # 确保与您的实际需求和PyInstaller版本兼容。特别是cipher和BUNDLE的定义。
        # 如果您使用的是较旧的PyInstaller版本，BUNDLE的参数可能略有不同。
        # 建议参考PyInstaller官方文档生成spec文件。

    - name: Build for macOS
      run: |
        pyinstaller --clean Auto24hStream3.3.spec # 创建MacOS可执行文件，添加 --clean 清理旧文件

    - name: Archive app
      run: |
        # 压缩 .app 文件以便上传
        cd dist
        zip -r Auto24hStream3.3.app.zip Auto24hStream3.3.app

    - name: Upload release assets
      # 只有在创建新的release时才上传，避免每次push都创建release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/Auto24hStream3.3.app.zip # 上传Mac可执行文件
        # name: Release ${{ github.ref_name }} # 可以自定义Release名称
        # body: | # 可以自定义Release描述
        #   Automated build of version ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

