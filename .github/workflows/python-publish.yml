name: Cross-platform Build

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  build-windows-x64:
    name: Windows 64-bit
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10 (x64)
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64' # Explicitly request x64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install pyinstaller and pillow (for icon handling)
          pip install pyinstaller pillow

      - name: Build with PyInstaller (Windows x64)
        run: |
          # --onefile: Create a single executable
          # --noconsole: Hide console window (for GUI app)
          # --icon: Specify the icon file
          pyinstaller --onefile --noconsole --icon=qy.ico Auto24hStream3.3.py

      - name: Upload artifact (Windows x64)
        uses: actions/upload-artifact@v4
        with:
          name: win-x64
          path: dist/Auto24hStream3.3.exe

  build-windows-x86:
    name: Windows 32-bit
    runs-on: windows-latest
    # Remove the PYINSTALLER_PYTHON env var as we will call the specific python.exe
    # env:
    #   PYINSTALLER_PYTHON: "C:\\Python310-32\\python.exe" # This might not be needed or correct

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download and Set up Python 3.10 (x86)
        # Use bash shell for consistent command execution
        shell: bash
        run: |
          # Download the 32-bit standalone Python distribution
          curl -LO https://github.com/indygreg/python-build-standalone/releases/download/20240401/cpython-3.10.12+20240401-i686-pc-windows-msvc-shared-install_only.tar.zst
          # Create a directory and extract the archive
          mkdir python310_32
          tar -I zstd -xf *.zst -C python310_32 --strip-components=1
          # Add the downloaded python directory to PATH for this step
          echo "$PWD/python310_32/Scripts" >> $GITHUB_PATH
          echo "$PWD/python310_32" >> $GITHUB_PATH

      - name: Install dependencies (Windows x86)
        # Use the 32-bit python executable explicitly
        run: |
          # Ensure pip is updated using the correct python
          python -m pip install --upgrade pip
          # Install pyinstaller and pillow using the correct python
          python -m pip install pyinstaller pillow

      - name: Build with PyInstaller (Windows x86)
        # Use the 32-bit python executable explicitly
        run: |
          # --onefile: Create a single executable
          # --noconsole: Hide console window (for GUI app)
          # --icon: Specify the icon file
          python -m PyInstaller --onefile --noconsole --icon=qy.ico Auto24hStream3.3.py

      - name: Upload artifact (Windows x86)
        uses: actions/upload-artifact@v4
        with:
          name: win-x86
          path: dist/Auto24hStream3.3.exe


  build-linux:
    name: Linux x64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10 (x64)
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64' # Explicitly request x64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install pyinstaller and pillow (for icon handling)
          pip install pyinstaller pillow

      - name: Build with PyInstaller (Linux x64)
        run: |
          # --onefile: Create a single executable
          # --icon: Specify the icon file (icon support varies by desktop environment)
          pyinstaller --onefile --icon=qy.ico Auto24hStream3.3.py

      - name: Upload artifact (Linux x64)
        uses: actions/upload-artifact@v4
        with:
          name: linux-x64
          path: dist/Auto24hStream3.3

  build-macos:
    name: macOS (x64/arm64 universal)
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          # macOS runners typically support universal builds with default setup

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install pyinstaller and pillow (for icon handling)
          pip install pyinstaller pillow

      - name: Build with PyInstaller (macOS .app)
        run: |
          # --windowed: Create a macOS app bundle (.app)
          # --onefile: Package into a single executable within the app bundle (common)
          # --icon: Specify the .icns icon file
          pyinstaller --windowed --onefile --icon=qy.icns Auto24hStream3.3.py

      - name: Upload artifact (macOS .app)
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: dist/Auto24hStream3.3.app
          # Note: Uploading the .app directory directly. It will be zipped by the action.

  create-release:
    name: Create GitHub Release
    # This job depends on all build jobs completing successfully
    needs: [build-windows-x64, build-windows-x86, build-linux, build-macos]
    # This job only runs when a tag is pushed
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          # Download all artifacts from the dependent jobs
          path: artifacts

      - name: List downloaded artifacts (for debugging)
        run: ls -R artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          # The tag name will be used as the release name
          # name: Release ${{ github.ref_name }} # Uncomment to customize release name
          # body: | # Uncomment to add release description
          #   Automated build release.
          # Upload all files found in the downloaded artifacts directory
          files: artifacts/*/* # This glob pattern should match files inside artifact subdirectories
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Automatically provided token

